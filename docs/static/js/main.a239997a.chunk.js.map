{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cate","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","id","images","title","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","imagen","key","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"qMAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAEVC,mBAAS,IAFC,mBAEvCC,EAFuC,KAE3BC,EAF2B,KAmB9C,OACE,0BAAMC,SAZa,SAACC,GACpBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAO,IAE1BR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACtCN,EAAc,OAQd,2BACEO,KAAK,OACLC,MAAOT,EACPU,SArBoB,SAACP,GACzBF,EAAcE,EAAEQ,OAAOF,Y,uBCNdG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAGfC,EAHe,iDAGiCC,UAAUH,GAH3C,+DAKFI,MAAMF,GALJ,cAKfG,EALe,gBAOAA,EAAKC,OAPL,uBAOdC,EAPc,EAOdA,KAEDC,EAAOD,EAAKE,KAAI,YAA0B,IAAxBC,EAAuB,EAAvBA,GAAIC,EAAmB,EAAnBA,OAC1B,MAAO,CAELD,GAAIA,EACJE,MAJ2C,EAAXA,MAKhCV,IAAG,OAAES,QAAF,IAAEA,OAAF,EAAEA,EAAQE,iBAAiBX,QAdb,kBAkBdM,GAlBc,4CAAH,sDCAPM,EAAc,SAAC,GAAqB,EAApBJ,GAAqB,IAAjBE,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAGtC,OACE,yBAAKa,UAAY,0CACf,uBAAGA,UAAY,eAAeH,GAC9B,yBAAKG,UAAY,YAAYC,IAAKd,EAAKe,IAAKL,MCHrCM,EAAU,SAAC,GAAgB,IAAflB,EAAc,EAAdA,SAAc,ECFX,SAACA,GAAc,IAAD,EAEdd,mBAAS,CACjCqB,KAAM,GACNY,SAAS,IAJ6B,mBAEjCC,EAFiC,KAE1BC,EAF0B,KAiBxC,OAVAC,qBAAU,WAERvB,EAAQC,GACPuB,MAAK,SAAAC,GAAI,OAAIH,EAAS,CACrBd,KAAMiB,EACNL,SAAS,SAGV,CAACnB,IAEGoB,EDVyBK,CAAazB,GAAhCW,EALwB,EAK9BJ,KAAcY,EALgB,EAKhBA,QAarB,OACE,oCACE,wBAAIJ,UAAW,qCAAqCf,EAApD,KAECmB,GAAW,yCAEZ,yBAAKJ,UAAY,aACdJ,EAAOF,KAAI,SAAAiB,GAAM,OAAI,kBAAC,EAAD,eAAaC,IAAKD,EAAOhB,IAAQgB,UE1BlDE,EAAe,WAAO,IAAD,EAGI1C,mBAAS,CAAC,qBAHd,mBAGzB2C,EAHyB,KAGb5C,EAHa,KAKhC,OAEA,oCACE,4CACA,kBAAC,EAAD,CAAaA,cAAeA,IAC5B,6BAEA,4BACG4C,EAAWpB,KAAI,SAAAT,GAAQ,OAAI,kBAAC,EAAD,CAAS2B,IAAK3B,EAAUA,SAAUA,U,MCXpE8B,IAASC,OAEP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.a239997a.chunk.js","sourcesContent":["import React, {useState} from 'react';\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n\r\n  const [inputValue, setInputValue] = useState(\"\")\r\n\r\n  const handleInputChange = (e) => {\r\n    setInputValue(e.target.value);\r\n  };\r\n  \r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if(inputValue.trim().length>2){\r\n\r\n      setCategories(cate => [inputValue, ...cate]);\r\n      setInputValue(\"\");\r\n    };\r\n\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n\r\n      <input \r\n        type=\"text\"\r\n        value={inputValue}\r\n        onChange={handleInputChange}\r\n      />\r\n    </form>\r\n  );\r\n}\r\n\r\n\r\nAddCategory.propTypes = {\r\n  setCategories: PropTypes.func.isRequired\r\n}\r\n","\r\n\r\nexport const getGifs = async (category) => {\r\n\r\n\r\n  const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=BQoqrX9ZyofWvXt5UhoExjzD0b19eGlj`;\r\n\r\n  const resp = await fetch(url);\r\n\r\n  const {data} = await resp.json();\r\n\r\n  const gifs = data.map(({id, images, title}) => {\r\n    return {\r\n      \r\n      id: id,\r\n      title: title,\r\n      url: images?.downsized_medium.url // El '?' por lo que entendi sirve para decir que si vienen imagenes siga, algo asi, busca mas info para acordarte\r\n    }\r\n  })\r\n\r\n  return gifs\r\n\r\n}","import React from 'react';\r\n\r\nexport const GifGridItem = ({id, title, url}) => {\r\n\r\n\r\n  return (\r\n    <div className = \"card animate__animated animate__fadeIn\">\r\n      <p className = \"card__title\">{title}</p>\r\n      <img className = \"card__img\" src={url} alt={title} />\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n\r\n/*   const [images, setImages] = useState([]) */\r\n\r\n  const {data: images, loading} = useFetchGifs(category);\r\n\r\n\r\n  //?============================================================================================\r\n  //  El useEffect es llamado despues de cada renderizado, en este caso con el segundo argumento '[]' le estamos diciendo que lo renderice una sola vez\r\n  //?============================================================================================\r\n\r\n/*   useEffect(() => {\r\n    getGifs(category)\r\n      .then(setImages) // ?Pasa por defecto la respuesta como argumento a una funcion\r\n      .catch(console.log)\r\n  }, [category]) // ? Se ejecut cada vez que category cambie */\r\n\r\n  return (\r\n    <>\r\n      <h3 className= \"animate__animated animate__zoomIn\">{category}:</h3>\r\n\r\n      {loading && <p>Loading...</p>}\r\n\r\n      <div className = \"card-grid\">\r\n        {images.map(imagen => <GifGridItem key={imagen.id} {...imagen} />)}\r\n        \r\n      </div>\r\n    </>\r\n  )\r\n}\r\n","import { useState, useEffect } from \"react\"\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGifs = (category) => {\r\n\r\n  const [state, setState] = useState({\r\n    data: [],\r\n    loading: true\r\n  });\r\n\r\n  useEffect(() => {\r\n\r\n    getGifs(category)\r\n    .then(imgs => setState({\r\n      data: imgs,\r\n      loading: false\r\n    }))\r\n\r\n  }, [category])\r\n\r\n  return state;\r\n\r\n}","import React, { useState } from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n\r\n  const [categories, setCategories] = useState([\"Naruto Shippuden\"])\r\n\r\n  return(\r\n\r\n  <>\r\n    <h2>GifExpertApp</h2>\r\n    <AddCategory setCategories={setCategories}/>\r\n    <hr />\r\n\r\n    <ol>\r\n      {categories.map(category => <GifGrid key={category} category={category}/>)}\r\n    </ol>\r\n\r\n  </>\r\n  \r\n  );\r\n\r\n};\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {GifExpertApp} from './GifExpertApp';\nimport './index.css';\n\n\nReactDOM.render(\n\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n\n// GifExpertApp"],"sourceRoot":""}